2025-03-26 17:30:47.108 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:30:47.139 +00:00 [INF] Logger configured.
2025-03-26 17:30:47.254 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:30:47.257 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:30:47.266 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:30:47.485 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:30:47.523 +00:00 [ERR] (App.xaml.cs): Failed to resolve service: MainWindowViewModel
System.InvalidOperationException: Unable to resolve service for type 'CRUDLibrary.Views.Pages.LoansPage' while attempting to activate 'CRUDLibrary.ViewModels.MainWindowViewModel'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at CRUDLibrary.App.ValidateServices() in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\App.xaml.cs:line 163
2025-03-26 17:30:47.727 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:30:48.392 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:30:48.477 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:30:48.506 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:30:48.519 +00:00 [DBG] Created DbConnection. (12ms).
2025-03-26 17:30:48.525 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:30:48.541 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:30:48.544 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:30:48.547 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:30:48.552 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:30:48.552 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:30:48.552 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:30:48.556 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (4ms).
2025-03-26 17:30:48.557 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (7ms).
2025-03-26 17:30:48.557 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:30:48.558 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:30:48.564 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:30:48.579 +00:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:30:48.580 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:30:48.581 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:30:48.713 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:30:48.713 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:30:48.713 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:30:48.713 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:30:48.713 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:30:48.730 +00:00 [ERR] (App.xaml.cs): Failed to resolve service: MainWindow
System.InvalidOperationException: Unable to resolve service for type 'CRUDLibrary.Views.Pages.LoansPage' while attempting to activate 'CRUDLibrary.ViewModels.MainWindowViewModel'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at CRUDLibrary.App.ValidateServices() in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\App.xaml.cs:line 163
2025-03-26 17:30:49.183 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:30:49.189 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:30:49.189 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:31:09.344 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:31:09.408 +00:00 [INF] Logger configured.
2025-03-26 17:31:09.448 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:31:09.450 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:31:09.460 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:31:09.715 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:31:09.908 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:31:10.472 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:31:10.582 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:31:10.598 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:31:10.610 +00:00 [DBG] Created DbConnection. (10ms).
2025-03-26 17:31:10.615 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:31:10.625 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:10.628 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:31:10.634 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:31:10.638 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:31:10.638 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:31:10.638 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:31:10.643 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (4ms).
2025-03-26 17:31:10.644 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (7ms).
2025-03-26 17:31:10.644 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:31:10.645 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:10.649 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:31:10.677 +00:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:31:10.679 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:10.681 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (2ms).
2025-03-26 17:31:11.087 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:31:11.088 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:31:11.088 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:31:11.088 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:31:11.088 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:31:11.088 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:31:11.088 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:31:11.088 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:31:11.088 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:31:11.099 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:31:11.101 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:31:11.102 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:31:11.102 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:31:11.653 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:31:11.857 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:31:11.878 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:31:11.879 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:11.879 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:31:11.879 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:31:11.879 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:31:11.879 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:31:11.882 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:31:11.916 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:31:11.942 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:31:11.943 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:31:11.947 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:11.949 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 65ms reading results.
2025-03-26 17:31:11.950 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:11.950 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:31:14.377 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:31:21.867 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:31:21.867 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:21.867 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:31:21.867 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:31:21.867 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:31:21.867 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:31:21.868 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:31:21.868 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:21.868 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:31:21.868 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:21.868 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:31:21.870 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:31:21.873 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:31:21.874 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:31:21.874 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:21.874 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:31:21.874 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:31:21.874 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:31:21.874 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:31:21.874 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:31:21.876 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:31:21.879 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:21.879 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:31:21.880 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:31:21.880 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:38:37.867 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:38:37.877 +00:00 [INF] Logger configured.
2025-03-26 17:38:37.922 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:38:37.924 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:38:37.930 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:38:38.061 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:38:38.222 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:38:38.857 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:38:38.935 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:38:38.957 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:38:38.970 +00:00 [DBG] Created DbConnection. (13ms).
2025-03-26 17:38:38.974 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:38:38.989 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:38:38.991 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:38:38.994 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:38:38.998 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:38:38.999 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:38:38.999 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:38:39.003 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (5ms).
2025-03-26 17:38:39.004 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (8ms).
2025-03-26 17:38:39.004 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:38:39.007 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:38:39.012 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:38:39.032 +00:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:38:39.034 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:38:39.036 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:38:39.413 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:38:39.413 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:38:39.413 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:38:39.413 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:38:39.413 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:38:39.413 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:38:39.413 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:38:39.413 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:38:39.413 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:38:39.419 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:38:39.420 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:38:39.422 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:38:39.422 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:38:39.863 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:38:40.087 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:38:40.107 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:38:40.107 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:38:40.108 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:38:40.108 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:38:40.108 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:38:40.108 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:38:40.110 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:38:40.153 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:38:40.197 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:38:40.200 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:38:40.202 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 90ms reading results.
2025-03-26 17:38:40.202 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:38:40.203 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:02.158 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:39:02.170 +00:00 [INF] Logger configured.
2025-03-26 17:39:02.215 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:39:02.218 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:39:02.227 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:39:02.379 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:39:02.500 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:39:02.976 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:39:03.073 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:39:03.082 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:39:03.092 +00:00 [DBG] Created DbConnection. (9ms).
2025-03-26 17:39:03.096 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:03.101 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:03.103 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:39:03.106 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:03.109 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:39:03.110 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:39:03.110 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:39:03.113 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:39:03.113 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-03-26 17:39:03.114 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:03.115 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:03.119 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:39:03.141 +00:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:39:03.143 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:03.145 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (2ms).
2025-03-26 17:39:03.495 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:39:03.495 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:39:03.495 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:39:03.495 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:39:03.495 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:39:03.495 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:39:03.495 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:39:03.496 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:39:03.496 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:39:03.508 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:39:03.514 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:39:03.520 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:39:03.520 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:39:04.014 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:39:04.205 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:39:04.227 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:04.228 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:04.229 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:39:04.229 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:04.229 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:04.229 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:04.231 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:04.267 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:39:04.312 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:39:04.314 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:39:04.317 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:04.319 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 86ms reading results.
2025-03-26 17:39:04.320 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:04.320 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:10.627 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:39:11.939 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:11.939 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:11.940 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:39:11.940 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:11.940 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:11.940 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:11.940 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:11.941 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:11.941 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:39:11.941 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:11.941 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:11.941 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:39:11.944 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:39:11.945 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:11.945 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:11.945 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:39:11.945 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:11.945 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:11.945 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:39:11.945 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:39:11.948 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:39:11.951 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:39:11.952 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:11.952 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 6ms reading results.
2025-03-26 17:39:11.952 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:11.952 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:25.439 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:39:25.448 +00:00 [INF] Logger configured.
2025-03-26 17:39:25.476 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:39:25.477 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:39:25.483 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:39:25.583 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:39:25.731 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:39:26.067 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:39:26.126 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:39:26.131 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:39:26.137 +00:00 [DBG] Created DbConnection. (5ms).
2025-03-26 17:39:26.140 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:26.145 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:26.147 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:39:26.149 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:26.152 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:39:26.153 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:39:26.153 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:39:26.156 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-03-26 17:39:26.156 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-03-26 17:39:26.156 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:26.157 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:26.160 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:39:26.181 +00:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:39:26.182 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:26.183 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:39:26.393 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:39:26.393 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:39:26.393 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:39:26.393 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:39:26.393 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:39:26.393 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:39:26.393 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:39:26.393 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:39:26.393 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:39:26.399 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:39:26.402 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:39:26.404 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:39:26.404 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:39:26.737 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:39:26.884 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:39:26.900 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:26.901 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:26.901 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:39:26.901 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:26.901 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:26.901 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:26.902 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:26.934 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:39:26.953 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:39:26.954 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:39:26.954 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:39:26.954 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:39:26.954 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:39:26.954 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:39:26.972 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:39:26.979 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:26.981 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 76ms reading results.
2025-03-26 17:39:26.982 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:26.982 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:35.160 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:39:36.315 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:36.315 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:36.315 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:39:36.315 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:36.315 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:36.315 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:36.315 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:39:36.316 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:36.316 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:39:36.316 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:36.316 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:39:36.316 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:39:36.319 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:39:36.320 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:39:36.320 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:36.320 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:39:36.320 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:36.320 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:39:36.320 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:39:36.320 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:39:36.322 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:39:36.325 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:39:36.325 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:39:36.325 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:39:36.325 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:39:36.326 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:36.326 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:39:36.326 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:39:36.326 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:42:16.198 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:42:16.208 +00:00 [INF] Logger configured.
2025-03-26 17:42:16.239 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:42:16.241 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:42:16.248 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:42:16.387 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:42:16.509 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:42:16.883 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:42:17.035 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:42:17.052 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:42:17.066 +00:00 [DBG] Created DbConnection. (10ms).
2025-03-26 17:42:17.070 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:42:17.077 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:17.080 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:42:17.083 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:42:17.088 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:42:17.089 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:42:17.089 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:42:17.094 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (5ms).
2025-03-26 17:42:17.095 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (9ms).
2025-03-26 17:42:17.095 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:42:17.097 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:17.103 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:42:17.135 +00:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:42:17.136 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:17.140 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (3ms).
2025-03-26 17:42:17.390 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:42:17.390 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:42:17.390 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:42:17.390 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:42:17.390 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:42:17.390 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:42:17.390 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:42:17.390 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:42:17.390 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:42:17.398 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:42:17.400 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:42:17.402 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:42:17.402 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:42:17.789 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:42:17.976 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:42:17.993 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:42:17.994 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:17.994 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:42:17.994 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:42:17.994 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:42:17.995 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:42:17.997 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:42:18.041 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:42:18.067 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:42:18.082 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:42:18.089 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:18.090 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 92ms reading results.
2025-03-26 17:42:18.092 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:18.092 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:42:20.004 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:42:21.225 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:42:21.225 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:21.225 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:42:21.225 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:42:21.225 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:42:21.225 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:42:21.226 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:42:21.226 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:21.226 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:42:21.226 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:21.226 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:42:21.227 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:42:21.230 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:42:21.231 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:42:21.231 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:21.231 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:42:21.231 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:42:21.231 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:42:21.231 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:42:21.231 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:42:21.233 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:42:21.236 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:21.236 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:42:21.236 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:42:21.236 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:20.374 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:46:20.385 +00:00 [INF] Logger configured.
2025-03-26 17:46:20.418 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:46:20.421 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:46:20.428 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:46:20.585 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:46:20.733 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:46:21.176 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:46:21.265 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:46:21.271 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:46:21.278 +00:00 [DBG] Created DbConnection. (5ms).
2025-03-26 17:46:21.281 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:21.287 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:21.291 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:46:21.294 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:46:21.300 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:46:21.301 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:46:21.301 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:46:21.306 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (6ms).
2025-03-26 17:46:21.306 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (10ms).
2025-03-26 17:46:21.307 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:21.308 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:21.316 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:46:21.340 +00:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:46:21.341 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:21.344 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:46:21.650 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:46:21.650 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:46:21.650 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:46:21.650 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:46:21.650 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:46:21.650 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:46:21.650 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:46:21.650 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:46:21.651 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:46:21.665 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:46:21.669 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:46:21.674 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:46:21.674 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:46:22.112 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:46:22.334 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:46:22.355 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:22.356 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:22.356 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:46:22.356 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:22.356 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:22.357 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:46:22.358 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:46:22.393 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:46:22.418 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:46:22.421 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:22.423 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 63ms reading results.
2025-03-26 17:46:22.424 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:22.425 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:24.586 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:46:25.751 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:25.751 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:25.751 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:46:25.751 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:25.751 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:25.751 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:46:25.752 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:46:25.753 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:25.753 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:46:25.753 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:25.753 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:25.754 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:46:25.757 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:46:25.758 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:25.758 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:25.758 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:46:25.758 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:25.758 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:25.758 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:46:25.759 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:46:25.761 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:46:25.764 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:46:25.765 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:25.765 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:46:25.765 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:25.765 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:33.634 +00:00 [DBG] The 'Book' entity with key '{Id: 1}' tracked by 'LibraryContext' changed state from '"Unchanged"' to '"Added"'.
2025-03-26 17:46:34.200 +00:00 [DBG] SaveChanges starting for 'LibraryContext'.
2025-03-26 17:46:34.204 +00:00 [DBG] DetectChanges starting for 'LibraryContext'.
2025-03-26 17:46:34.216 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 1}'.
2025-03-26 17:46:34.224 +00:00 [DBG] 'LibraryContext' generated temporary value '-2147482647' for the property 'Loan.LoanID'.
2025-03-26 17:46:34.239 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: -2147482647}'.
2025-03-26 17:46:34.240 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 2}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 1}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 3}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 2}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 4}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 3}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 5}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 4}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 6}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 5}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 7}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 6}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 8}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 7}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 9}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 8}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 10}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 9}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 11}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 10}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 12}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 11}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 13}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 12}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 14}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 13}'.
2025-03-26 17:46:34.241 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 15}'.
2025-03-26 17:46:34.241 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 14}'.
2025-03-26 17:46:34.242 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 1}'.
2025-03-26 17:46:34.242 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 2}'.
2025-03-26 17:46:34.242 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 3}'.
2025-03-26 17:46:34.242 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 4}'.
2025-03-26 17:46:34.242 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 5}'.
2025-03-26 17:46:34.242 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 6}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 7}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 8}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 9}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 10}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 11}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 12}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 13}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 14}'.
2025-03-26 17:46:34.243 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 15}'.
2025-03-26 17:46:34.244 +00:00 [DBG] DetectChanges completed for 'LibraryContext'.
2025-03-26 17:46:34.283 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:34.283 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:34.284 +00:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-26 17:46:34.286 +00:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-03-26 17:46:34.287 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:46:34.287 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:34.289 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-03-26 17:46:34.291 +00:00 [DBG] Executing DbCommand [Parameters=[@p0='1', @p1='JK Rowling' (Nullable = false) (Size = 10), @p2='A young boy who discovers that he is part of a whole new magical world' (Nullable = false) (Size = 70), @p3='0', @p4='00000000-0000-0000-0000-000000000000' (Nullable = false) (Size = 36), @p5='1997-06-26T00:00:00.0000000' (DbType = DateTime), @p6='0', @p7='Harry Potter and the Philosopher's Stone' (Nullable = false) (Size = 40)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Books" ("Id", "Author", "Description", "Genre", "ISBN", "PublicationDate", "Status", "Title")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-03-26 17:46:34.298 +00:00 [ERR] Failed executing DbCommand (9ms) [Parameters=[@p0='1', @p1='JK Rowling' (Nullable = false) (Size = 10), @p2='A young boy who discovers that he is part of a whole new magical world' (Nullable = false) (Size = 70), @p3='0', @p4='00000000-0000-0000-0000-000000000000' (Nullable = false) (Size = 36), @p5='1997-06-26T00:00:00.0000000' (DbType = DateTime), @p6='0', @p7='Harry Potter and the Philosopher's Stone' (Nullable = false) (Size = 40)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Books" ("Id", "Author", "Description", "Genre", "ISBN", "PublicationDate", "Status", "Title")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-03-26 17:46:34.302 +00:00 [DBG] Disposing transaction.
2025-03-26 17:46:34.303 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:34.303 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:34.330 +00:00 [ERR] An exception occurred in the database while saving changes for context type 'CRUDLibrary.Models.DBModels.LibraryContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 19: 'UNIQUE constraint failed: Books.Id'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 19: 'UNIQUE constraint failed: Books.Id'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at CRUDLibrary.Services.LibraryService.AddBookAsync(Book book) in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\Services\LibraryService.cs:line 40
2025-03-26 17:46:36.737 +00:00 [ERR] (App.xaml.cs): UI thread exception
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 19: 'UNIQUE constraint failed: Books.Id'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at CRUDLibrary.Services.LibraryService.AddBookAsync(Book book) in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\Services\LibraryService.cs:line 40
   at CRUDLibrary.ViewModels.Loans.LoansPageViewModel.AddAsync() in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\ViewModels\Loans\LoansPageViewModel.cs:line 72
   at CommunityToolkit.Mvvm.Input.AsyncRelayCommand.AwaitAndThrowIfFailed(Task executionTask)
   at System.Threading.Tasks.Task.<>c.<ThrowAsync>b__128_0(Object state)
   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
2025-03-26 17:46:42.582 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:46:42.589 +00:00 [INF] Logger configured.
2025-03-26 17:46:42.618 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:46:42.620 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:46:42.625 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:46:42.721 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:46:42.818 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:46:43.158 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:46:43.223 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:46:43.227 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:46:43.233 +00:00 [DBG] Created DbConnection. (4ms).
2025-03-26 17:46:43.236 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:43.240 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:43.242 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:46:43.244 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:43.248 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:46:43.248 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:46:43.248 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:46:43.251 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:46:43.251 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-03-26 17:46:43.251 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:43.252 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:43.256 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:46:43.277 +00:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:46:43.278 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:43.279 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:46:43.474 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:46:43.474 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:46:43.474 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:46:43.474 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:46:43.474 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:46:43.474 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:46:43.474 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:46:43.474 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:46:43.474 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:46:43.479 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:46:43.480 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:46:43.481 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:46:43.481 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:46:43.799 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:46:43.960 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:46:43.975 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:46:43.976 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:43.976 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:46:43.976 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:43.976 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:46:43.976 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:46:43.978 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:46:44.002 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:46:44.022 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:46:44.022 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:46:44.022 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:46:44.042 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:46:44.042 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:46:44.044 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:46:44.047 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:44.048 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 69ms reading results.
2025-03-26 17:46:44.049 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:46:44.049 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:46:45.601 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:48:39.553 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:48:39.568 +00:00 [INF] Logger configured.
2025-03-26 17:48:39.605 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:48:39.607 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:48:39.612 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:48:39.749 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:48:39.938 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:48:40.391 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:48:40.494 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:48:40.502 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:48:40.510 +00:00 [DBG] Created DbConnection. (7ms).
2025-03-26 17:48:40.513 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:48:40.518 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:40.520 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:48:40.523 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:48:40.526 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:48:40.527 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:48:40.527 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:48:40.531 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:48:40.532 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (7ms).
2025-03-26 17:48:40.532 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:48:40.533 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:40.538 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:48:40.567 +00:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:48:40.569 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:40.572 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (3ms).
2025-03-26 17:48:40.842 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:48:40.842 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:48:40.842 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:48:40.842 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:48:40.843 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:48:40.843 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:48:40.843 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:48:40.843 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:48:40.843 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:48:40.849 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:48:40.851 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:48:40.853 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:48:40.853 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:48:41.430 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:48:41.623 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:48:41.641 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:48:41.642 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:41.642 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:48:41.642 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:48:41.642 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:48:41.643 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:48:41.644 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:48:41.677 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:48:41.721 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:48:41.724 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:41.726 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 81ms reading results.
2025-03-26 17:48:41.728 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:41.728 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:48:43.072 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:48:48.196 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:48:48.202 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:48:48.204 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:48:48.204 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:48.204 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:48:48.204 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:48:48.204 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:48:48.204 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:48:48.205 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:48:48.205 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:48.205 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:48:48.205 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:48:48.205 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:49:17.458 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:49:17.467 +00:00 [INF] Logger configured.
2025-03-26 17:49:17.495 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:49:17.498 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:49:17.503 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:49:17.600 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:49:17.692 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:49:17.995 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:49:18.056 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:49:18.062 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:49:18.069 +00:00 [DBG] Created DbConnection. (5ms).
2025-03-26 17:49:18.073 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:49:18.078 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:18.080 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:49:18.083 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:49:18.088 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:49:18.088 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:49:18.088 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:49:18.091 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:49:18.092 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-03-26 17:49:18.092 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:49:18.093 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:18.097 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:49:18.115 +00:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:49:18.116 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:18.118 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (2ms).
2025-03-26 17:49:18.299 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:49:18.299 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:49:18.299 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:49:18.299 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:49:18.299 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:49:18.299 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:49:18.299 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:49:18.299 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:49:18.299 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:49:18.304 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:49:18.305 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:49:18.307 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:49:18.307 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:49:18.645 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:49:18.798 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:49:18.813 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:49:18.814 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:18.814 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:49:18.814 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:49:18.814 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:49:18.814 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:49:18.815 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:49:18.841 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:49:18.858 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:49:18.858 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:49:18.858 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:49:18.858 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:49:18.858 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:49:18.859 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:49:18.861 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:18.862 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 45ms reading results.
2025-03-26 17:49:18.863 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:18.863 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:49:26.490 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:49:31.358 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:49:31.361 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:49:31.362 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:49:31.362 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:31.362 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:49:31.362 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:49:31.362 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:49:31.362 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:49:31.362 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:49:31.362 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:31.362 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:49:31.362 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:31.362 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:49:53.968 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:49:53.977 +00:00 [INF] Logger configured.
2025-03-26 17:49:54.005 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:49:54.007 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:49:54.012 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:49:54.112 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:49:54.205 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:49:54.583 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:49:54.647 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:49:54.655 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:49:54.663 +00:00 [DBG] Created DbConnection. (6ms).
2025-03-26 17:49:54.666 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:49:54.671 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:54.674 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:49:54.676 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:49:54.680 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:49:54.681 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:49:54.681 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:49:54.684 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:49:54.685 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-03-26 17:49:54.685 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:49:54.686 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:54.690 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:49:54.708 +00:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:49:54.708 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:49:54.710 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:50:14.019 +00:00 [DBG] DetectChanges starting for 'LibraryContext'.
2025-03-26 17:50:14.020 +00:00 [DBG] DetectChanges completed for 'LibraryContext'.
2025-03-26 17:50:20.645 +00:00 [DBG] DetectChanges starting for 'LibraryContext'.
2025-03-26 17:50:20.645 +00:00 [DBG] DetectChanges completed for 'LibraryContext'.
2025-03-26 17:50:39.907 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:50:39.907 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:50:39.907 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:50:39.907 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:50:39.907 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:50:39.907 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:50:39.907 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:50:39.907 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:50:39.907 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:50:39.913 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:50:39.915 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:50:39.916 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:50:39.916 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:50:40.241 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:50:40.401 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:50:40.418 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:50:40.419 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:50:40.419 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:50:40.419 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:50:40.419 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:50:40.419 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:50:40.421 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:50:40.452 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:50:40.549 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:50:40.550 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:50:40.550 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:50:40.550 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:50:40.550 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:50:40.552 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:50:40.554 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 131ms reading results.
2025-03-26 17:50:40.555 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:50:40.555 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:50:42.472 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:50:42.503 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:50:42.507 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:50:42.508 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:50:42.509 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:50:42.509 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:50:42.509 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:50:42.509 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:50:42.509 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:50:42.509 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:50:42.509 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:50:42.509 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:50:42.509 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:50:42.509 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:00.046 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:00.046 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:00.046 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:51:00.046 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:00.046 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:00.046 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:51:00.046 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:51:00.047 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:00.047 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:51:00.047 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:00.047 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:00.048 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:51:00.050 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:51:00.051 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:00.051 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:00.051 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:51:00.051 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:00.051 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:00.051 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:51:00.053 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:51:00.055 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:51:00.058 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:00.058 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:51:00.058 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:00.058 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:43.205 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:51:43.213 +00:00 [INF] Logger configured.
2025-03-26 17:51:43.239 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:51:43.241 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:51:43.246 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:51:43.343 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:51:43.440 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:51:43.756 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:51:43.814 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:51:43.820 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:51:43.827 +00:00 [DBG] Created DbConnection. (6ms).
2025-03-26 17:51:43.830 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:43.835 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:43.837 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:51:43.839 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:43.842 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:51:43.842 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:51:43.842 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:51:43.845 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-03-26 17:51:43.845 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-03-26 17:51:43.845 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:43.846 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:43.849 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:51:43.870 +00:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:51:43.870 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:43.872 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:51:44.063 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:51:44.063 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:51:44.063 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:51:44.064 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:51:44.064 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:51:44.064 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:51:44.064 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:51:44.064 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:51:44.064 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:51:44.070 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:51:44.071 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:51:44.073 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:51:44.073 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:51:44.388 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:51:44.554 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:51:44.572 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:44.573 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:44.573 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:51:44.573 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:44.573 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:44.574 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:51:44.575 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:51:44.603 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:51:44.639 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:51:44.642 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:44.644 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 67ms reading results.
2025-03-26 17:51:44.645 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:44.645 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:49.440 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:51:49.462 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:51:49.465 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:51:49.466 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:49.466 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:49.466 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:51:49.466 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:49.466 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:49.466 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:51:49.466 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:51:49.466 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:49.466 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:51:49.466 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:49.466 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:51.022 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:51.022 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:51.022 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:51:51.022 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:51.022 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:51.022 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:51:51.022 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:51:51.023 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:51.023 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:51:51.023 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:51.023 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:51:51.024 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:51:51.027 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:51:51.027 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:51:51.027 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:51.027 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:51:51.027 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:51.027 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:51:51.027 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:51:51.027 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:51:51.030 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:51:51.033 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:51.033 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:51:51.033 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:51:51.033 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:52:26.641 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:52:26.654 +00:00 [INF] Logger configured.
2025-03-26 17:52:26.693 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:52:26.695 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:52:26.701 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:52:26.853 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:52:27.006 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:52:27.372 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:52:27.464 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:52:27.469 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:52:27.475 +00:00 [DBG] Created DbConnection. (5ms).
2025-03-26 17:52:27.480 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:52:27.487 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:27.493 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:52:27.498 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:52:27.505 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:52:27.505 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:52:27.506 +00:00 [DBG] Created DbConnection. (1ms).
2025-03-26 17:52:27.512 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (7ms).
2025-03-26 17:52:27.513 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (12ms).
2025-03-26 17:52:27.513 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:52:27.515 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:27.524 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:52:27.552 +00:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:52:27.554 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:27.555 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:52:27.799 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:52:27.799 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:52:27.799 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:52:27.800 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:52:27.800 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:52:27.800 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:52:27.800 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:52:27.800 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:52:27.800 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:52:27.806 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:52:27.809 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:52:27.811 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:52:27.811 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:52:28.269 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:52:28.463 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:52:28.485 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:52:28.486 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:28.487 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:52:28.487 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:28.487 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:28.487 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:52:28.489 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:52:28.522 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:52:28.538 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:52:28.538 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:52:28.538 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:52:28.553 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:52:28.559 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:28.560 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 69ms reading results.
2025-03-26 17:52:28.561 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:28.562 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:52:34.536 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:52:34.557 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:52:34.561 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:52:34.562 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:52:34.562 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:34.562 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:52:34.563 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:34.563 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:34.563 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:52:34.563 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:52:34.563 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:34.563 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:52:34.563 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:34.563 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:52:35.729 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:52:35.729 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:35.729 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:52:35.729 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:35.729 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:35.729 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:52:35.729 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:52:35.730 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:35.730 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:52:35.746 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:35.746 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (16ms).
2025-03-26 17:52:35.747 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:52:35.750 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:52:35.751 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:52:35.751 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:35.751 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:52:35.751 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:35.751 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:52:35.751 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:52:35.751 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:52:35.754 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:52:35.757 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:35.757 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:52:35.757 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:52:35.757 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:03.193 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:53:03.206 +00:00 [INF] Logger configured.
2025-03-26 17:53:03.248 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:53:03.250 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:53:03.257 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:53:03.450 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:53:03.585 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:53:04.053 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:53:04.140 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:53:04.149 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:53:04.162 +00:00 [DBG] Created DbConnection. (11ms).
2025-03-26 17:53:04.168 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:04.177 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:04.179 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:53:04.182 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:04.185 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:53:04.185 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:53:04.186 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:53:04.190 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:53:04.191 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (7ms).
2025-03-26 17:53:04.191 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:04.193 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:04.200 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:53:04.220 +00:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:53:04.222 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:04.224 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (2ms).
2025-03-26 17:53:04.517 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:53:04.517 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:53:04.517 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:53:04.517 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:53:04.517 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:53:04.517 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:53:04.517 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:53:04.517 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:53:04.517 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:53:04.528 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:53:04.530 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:53:04.532 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:53:04.532 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:53:04.912 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:53:05.093 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:53:05.115 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:05.117 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:05.118 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:05.118 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:05.118 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:05.118 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:05.120 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:05.152 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:53:05.199 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:53:05.200 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:53:05.200 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:53:05.200 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:53:05.200 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:53:05.200 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:53:05.205 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:05.207 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 85ms reading results.
2025-03-26 17:53:05.209 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:05.209 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:07.545 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:53:07.571 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:53:07.574 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:53:07.575 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:07.575 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:07.575 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:07.575 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:07.575 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:07.575 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:53:07.575 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:53:07.576 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:07.576 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:53:07.576 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:07.576 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:10.995 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:10.996 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:10.996 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:10.996 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:10.996 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:10.996 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:10.996 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:10.997 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:10.997 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 1ms reading results.
2025-03-26 17:53:10.997 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:10.997 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:11.001 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:53:11.007 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:53:11.008 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:11.008 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:11.008 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:11.008 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:11.008 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:11.008 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:53:11.008 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:53:11.012 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:53:11.016 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:53:11.017 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:11.017 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 8ms reading results.
2025-03-26 17:53:11.017 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:11.017 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:16.449 +00:00 [DBG] The 'Book' entity with key '{Id: 1}' tracked by 'LibraryContext' changed state from '"Unchanged"' to '"Modified"'.
2025-03-26 17:53:16.450 +00:00 [DBG] SaveChanges starting for 'LibraryContext'.
2025-03-26 17:53:16.451 +00:00 [DBG] DetectChanges starting for 'LibraryContext'.
2025-03-26 17:53:16.460 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 1}'.
2025-03-26 17:53:16.470 +00:00 [DBG] 'LibraryContext' generated temporary value '-2147482647' for the property 'Loan.LoanID'.
2025-03-26 17:53:16.484 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: -2147482647}'.
2025-03-26 17:53:16.490 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 2}'.
2025-03-26 17:53:16.490 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 1}'.
2025-03-26 17:53:16.490 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 3}'.
2025-03-26 17:53:16.490 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 2}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 4}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 3}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 5}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 4}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 6}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 5}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 7}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 6}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 8}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 7}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 9}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 8}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 10}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 9}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 11}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 10}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 12}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 11}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 13}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 12}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 14}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 13}'.
2025-03-26 17:53:16.491 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Book.Loans' on entity with key '{Id: 15}'.
2025-03-26 17:53:16.491 +00:00 [DBG] Context 'LibraryContext' started tracking 'Loan' entity with key '{LoanID: 14}'.
2025-03-26 17:53:16.492 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 1}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 2}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 3}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 4}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 5}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 6}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 7}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 8}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 9}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 10}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 11}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 12}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 13}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 14}'.
2025-03-26 17:53:16.493 +00:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LibraryMember.LoanHistory' on entity with key '{Id: 15}'.
2025-03-26 17:53:16.494 +00:00 [DBG] DetectChanges completed for 'LibraryContext'.
2025-03-26 17:53:16.534 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:16.534 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:16.535 +00:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-26 17:53:16.539 +00:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-03-26 17:53:16.540 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:16.540 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:16.542 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-03-26 17:53:16.543 +00:00 [DBG] Executing DbCommand [Parameters=[@p7='1', @p0='JK Rowling' (Nullable = false) (Size = 10), @p1='A young boy who discovers that he is part of a whole new magical world' (Nullable = false) (Size = 70), @p2='0', @p3='00000000-0000-0000-0000-000000000000' (Nullable = false) (Size = 36), @p4='1997-06-26T00:00:00.0000000' (DbType = DateTime), @p5='0', @p6='Harry Potter and the Philosopher's Stone' (Nullable = false) (Size = 40)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Books" SET "Author" = @p0, "Description" = @p1, "Genre" = @p2, "ISBN" = @p3, "PublicationDate" = @p4, "Status" = @p5, "Title" = @p6
WHERE "Id" = @p7
RETURNING 1;
2025-03-26 17:53:16.548 +00:00 [INF] Executed DbCommand (6ms) [Parameters=[@p7='1', @p0='JK Rowling' (Nullable = false) (Size = 10), @p1='A young boy who discovers that he is part of a whole new magical world' (Nullable = false) (Size = 70), @p2='0', @p3='00000000-0000-0000-0000-000000000000' (Nullable = false) (Size = 36), @p4='1997-06-26T00:00:00.0000000' (DbType = DateTime), @p5='0', @p6='Harry Potter and the Philosopher's Stone' (Nullable = false) (Size = 40)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Books" SET "Author" = @p0, "Description" = @p1, "Genre" = @p2, "ISBN" = @p3, "PublicationDate" = @p4, "Status" = @p5, "Title" = @p6
WHERE "Id" = @p7
RETURNING 1;
2025-03-26 17:53:16.550 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:16.550 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 2ms reading results.
2025-03-26 17:53:16.553 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:16.553 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:16.553 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:16.553 +00:00 [DBG] Executing DbCommand [Parameters=[@p5='1', @p0='2', @p1='2', @p2='2025-04-02T17:53:11.0176720+01:00' (DbType = DateTime), @p3='2025-03-26T17:53:11.0176712+00:00' (DbType = DateTime), @p4=NULL (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Loans" SET "BookID" = @p0, "BorrowerID" = @p1, "DueDate" = @p2, "LoanDate" = @p3, "ReturnDate" = @p4
WHERE "LoanID" = @p5
RETURNING 1;
2025-03-26 17:53:16.554 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p5='1', @p0='2', @p1='2', @p2='2025-04-02T17:53:11.0176720+01:00' (DbType = DateTime), @p3='2025-03-26T17:53:11.0176712+00:00' (DbType = DateTime), @p4=NULL (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Loans" SET "BookID" = @p0, "BorrowerID" = @p1, "DueDate" = @p2, "LoanDate" = @p3, "ReturnDate" = @p4
WHERE "LoanID" = @p5
RETURNING 1;
2025-03-26 17:53:16.558 +00:00 [DBG] Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException: The database operation was expected to affect 1 row(s), but actually affected 0 row(s); data may have been modified or deleted since entities were loaded. See https://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
2025-03-26 17:53:16.560 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:16.560 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 6ms reading results.
2025-03-26 17:53:16.562 +00:00 [DBG] Disposing transaction.
2025-03-26 17:53:16.563 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:16.563 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:16.587 +00:00 [ERR] (App.xaml.cs): UI thread exception
Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException: The database operation was expected to affect 1 row(s), but actually affected 0 row(s); data may have been modified or deleted since entities were loaded. See https://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ThrowAggregateUpdateConcurrencyExceptionAsync(RelationalDataReader reader, Int32 commandIndex, Int32 expectedRowsAffected, Int32 rowsAffected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithRowsAffectedOnlyAsync(Int32 commandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at CRUDLibrary.Services.LibraryService.UpdateBookAsync(Book book) in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\Services\LibraryService.cs:line 223
   at CRUDLibrary.ViewModels.Loans.LoansPageViewModel.AddAsync() in C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\ViewModels\Loans\LoansPageViewModel.cs:line 81
   at CommunityToolkit.Mvvm.Input.AsyncRelayCommand.AwaitAndThrowIfFailed(Task executionTask)
   at System.Threading.Tasks.Task.<>c.<ThrowAsync>b__128_0(Object state)
   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
2025-03-26 17:53:19.299 +00:00 [INF] (App.xaml.cs): App Exiting
2025-03-26 17:53:25.261 +00:00 [INF]  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
2025-03-26 17:53:25.269 +00:00 [INF] Logger configured.
2025-03-26 17:53:25.295 +00:00 [INF] (App.xaml.cs): Registering Dependency injection services.
2025-03-26 17:53:25.296 +00:00 [INF] (App.xaml.cs): Dependency injection services registered.
2025-03-26 17:53:25.301 +00:00 [INF] (App.xaml.cs): Service provider built successfully.
2025-03-26 17:53:25.396 +00:00 [INF] (App.xaml.cs): CRUD Library Starting up
2025-03-26 17:53:25.496 +00:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-26 17:53:25.857 +00:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-26 17:53:25.912 +00:00 [DBG] Entity Framework Core 9.0.2 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.2' with options: SensitiveDataLoggingEnabled 
2025-03-26 17:53:25.916 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:53:25.923 +00:00 [DBG] Created DbConnection. (5ms).
2025-03-26 17:53:25.927 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:25.932 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:25.934 +00:00 [DBG] Disposing connection to database 'main' on server 'library.db'.
2025-03-26 17:53:25.936 +00:00 [DBG] Disposed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:25.940 +00:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-03-26 17:53:25.940 +00:00 [DBG] Creating DbConnection.
2025-03-26 17:53:25.940 +00:00 [DBG] Created DbConnection. (0ms).
2025-03-26 17:53:25.943 +00:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-03-26 17:53:25.943 +00:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-03-26 17:53:25.943 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:25.944 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:25.948 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:53:25.957 +00:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-03-26 17:53:25.958 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:25.960 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (1ms).
2025-03-26 17:53:26.173 +00:00 [INF] (MainWindowViewModel.cs): Pages successfully instantiated successfully.
2025-03-26 17:53:26.173 +00:00 [INF] (MainWindowViewModel.cs): Navigation commands initialized.
2025-03-26 17:53:26.173 +00:00 [INF] (MainWindowViewModel.cs): MainWindowViewModel constructed
2025-03-26 17:53:26.173 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindowViewModel
2025-03-26 17:53:26.173 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPageViewModel
2025-03-26 17:53:26.173 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPageViewModel
2025-03-26 17:53:26.173 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryContext
2025-03-26 17:53:26.173 +00:00 [DBG] (App.xaml.cs): Resolved service: LibraryService
2025-03-26 17:53:26.173 +00:00 [DBG] (App.xaml.cs): Resolved service: IWindowService
2025-03-26 17:53:26.183 +00:00 [DBG] (App.xaml.cs): Resolved service: MainWindow
2025-03-26 17:53:26.186 +00:00 [DBG] (App.xaml.cs): Resolved service: InventoryPage
2025-03-26 17:53:26.188 +00:00 [DBG] (App.xaml.cs): Resolved service: MembersPage
2025-03-26 17:53:26.188 +00:00 [INF] (App.xaml.cs): Starting MainWindow
2025-03-26 17:53:26.559 +00:00 [DBG] Compiling query expression: 
'DbSet<Book>()'
2025-03-26 17:53:26.751 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Book>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Book.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Book.Author (string) Required, 1], [Property: Book.Description (string) Required, 2], [Property: Book.Genre (BookGenre) Required, 3], [Property: Book.ISBN (string) Required, 4], [Property: Book.PublicationDate (DateTime) Required, 5], [Property: Book.Status (BookStatus) Required, 6], [Property: Book.Title (string) Required, 7] }
        SELECT b.Id, b.Author, b.Description, b.Genre, b.ISBN, b.PublicationDate, b.Status, b.Title
        FROM Books AS b, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Book instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Book);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Book)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Author>k__BackingField = dataReader.GetString(1);
                                instance.<Description>k__BackingField = dataReader.GetString(2);
                                instance.<Genre>k__BackingField = Invoke(((EnumToNumberConverter<BookGenre, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Genre (BookGenre) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Genre")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(3));
                                instance.<ISBN>k__BackingField = dataReader.GetString(4);
                                instance.<PublicationDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Book.Status (BookStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(6));
                                instance.<Title>k__BackingField = dataReader.GetString(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:53:26.770 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:26.771 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:26.771 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:26.771 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:26.771 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:26.772 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:26.773 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:26.802 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 1}'.
2025-03-26 17:53:26.826 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 2}'.
2025-03-26 17:53:26.826 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 3}'.
2025-03-26 17:53:26.826 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 4}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 5}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 6}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 7}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 8}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 9}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 10}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 11}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 12}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 13}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 14}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 15}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 16}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 17}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 18}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 19}'.
2025-03-26 17:53:26.843 +00:00 [DBG] Context 'LibraryContext' started tracking 'Book' entity with key '{Id: 20}'.
2025-03-26 17:53:26.848 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:26.849 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 75ms reading results.
2025-03-26 17:53:26.850 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:26.850 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:28.342 +00:00 [INF] (MainWindowViewModel.cs): Navigating to _loansPage.
2025-03-26 17:53:28.365 +00:00 [DBG] Compiling query expression: 
'DbSet<Loan>()'
2025-03-26 17:53:28.368 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Loan>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Loan.LoanID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Loan.BookID (int) Required FK Index, 1], [Property: Loan.BorrowerID (int) Required FK Index, 2], [Property: Loan.DueDate (DateTime) Required, 3], [Property: Loan.LoanDate (DateTime) Required, 4], [Property: Loan.ReturnDate (DateTime?), 5] }
        SELECT l.LoanID, l.BookID, l.BorrowerID, l.DueDate, l.LoanDate, l.ReturnDate
        FROM Loans AS l, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Loan entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Loan instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Loan);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Loan.LoanID PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Loan)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]: 
                        {
                            return 
                            {
                                Loan instance;
                                instance = new Loan();
                                instance.<LoanID>k__BackingField = dataReader.GetInt32(0);
                                instance.<BookID>k__BackingField = dataReader.GetInt32(1);
                                instance.<BorrowerID>k__BackingField = dataReader.GetInt32(2);
                                instance.<DueDate>k__BackingField = dataReader.GetDateTime(3);
                                instance.<LoanDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<ReturnDate>k__BackingField = dataReader.IsDBNull(5) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Loan | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.Loan")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Loan)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:53:28.369 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:28.369 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:28.369 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:28.369 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:28.369 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:28.369 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:53:28.369 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "l"."LoanID", "l"."BookID", "l"."BorrowerID", "l"."DueDate", "l"."LoanDate", "l"."ReturnDate"
FROM "Loans" AS "l"
2025-03-26 17:53:28.370 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:28.370 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:53:28.370 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:28.370 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:49.956 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:49.956 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:49.956 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:49.956 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:49.956 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:49.957 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:49.957 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Author", "b"."Description", "b"."Genre", "b"."ISBN", "b"."PublicationDate", "b"."Status", "b"."Title"
FROM "Books" AS "b"
2025-03-26 17:53:49.957 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:49.957 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 0ms reading results.
2025-03-26 17:53:49.957 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:49.957 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
2025-03-26 17:53:49.958 +00:00 [DBG] Compiling query expression: 
'DbSet<LibraryMember>()'
2025-03-26 17:53:49.962 +00:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<LibraryMember>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: LibraryMember.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: LibraryMember.Email (string) Required, 1], [Property: LibraryMember.Name (string) Required, 2], [Property: LibraryMember.PhoneNumber (string) Required, 3] }
        SELECT m.Id, m.Email, m.Name, m.PhoneNumber
        FROM Members AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        LibraryMember entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            LibraryMember instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(LibraryMember);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LibraryMember.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (LibraryMember)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]: 
                        {
                            return 
                            {
                                LibraryMember instance;
                                instance = new LibraryMember();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LibraryMember | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CRUDLibrary.Models.LibraryModels.LibraryMember")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LibraryMember)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: CRUDLibrary.Models.DBModels.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-26 17:53:49.963 +00:00 [DBG] Opening connection to database 'main' on server 'library.db'.
2025-03-26 17:53:49.963 +00:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:49.963 +00:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-26 17:53:49.963 +00:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:49.963 +00:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-26 17:53:49.963 +00:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:53:49.963 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "m"."Id", "m"."Email", "m"."Name", "m"."PhoneNumber"
FROM "Members" AS "m"
2025-03-26 17:53:49.965 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 1}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 2}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 3}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 4}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 5}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 6}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 7}'.
2025-03-26 17:53:49.968 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 8}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 9}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 10}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 11}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 12}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 13}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 14}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Context 'LibraryContext' started tracking 'LibraryMember' entity with key '{Id: 15}'.
2025-03-26 17:53:49.969 +00:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:49.969 +00:00 [DBG] A data reader for 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db' is being disposed after spending 5ms reading results.
2025-03-26 17:53:49.969 +00:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Isaac\source\repos\CRUDLibrary\CRUDLibrary\bin\Debug\net8.0-windows\library.db'.
2025-03-26 17:53:49.969 +00:00 [DBG] Closed connection to database 'main' on server 'library.db' (0ms).
